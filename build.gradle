plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.hasProperty('mod_version') ? project.mod_version : '1.0.5'
group = project.hasProperty('maven_group') ? project.maven_group : 'com.example'

base {
	archivesName = project.hasProperty('archives_base_name') ? project.archives_base_name : 'modid'
}

repositories {
	mavenCentral() // This is sufficient for LuckPerms and many other common dependencies
	maven {
		name = "Fabric"
		url = "https://maven.fabricmc.net/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.hasProperty('minecraft_version') ? project.minecraft_version : '1.20.4'}"
	mappings "net.fabricmc:yarn:${project.hasProperty('yarn_mappings') ? project.yarn_mappings : '1.20.4+build.3'}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.hasProperty('loader_version') ? project.loader_version : '0.15.7'}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.hasProperty('fabric_version') ? project.fabric_version : '0.86.1+1.20.4'}"
	modImplementation "me.lucko:fabric-permissions-api:0.3.1" // For handling permissions across different mods/plugins
	implementation 'net.luckperms:api:5.4' // LuckPerms API for specific features if necessary
	implementation 'com.google.code.gson:gson:2.8.9' // Gson for JSON parsing
	implementation 'org.yaml:snakeyaml:2.2' // SnakeYAML for YAML parsing
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
	repositories {
		// Add repositories to publish to here.
	}
}
